#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

int get_index(char c){
    switch(c){
            case 'a': return 0; break;
            case 'b': return 1; break;
            case 'c': return 2; break;
            case 'd': return 3; break;
            case 'e': return 4; break;
            case 'f': return 5; break;
            case 'g': return 6; break;
            case 'h': return 7; break;
            case 'i': return 8; break;
            case 'j': return 9; break;
            case 'k': return 10; break;
            case 'l': return 11; break;
            case 'm': return 12; break;
            case 'n': return 13; break;
            case 'o': return 14; break;
            case 'p': return 15; break;
            case 'q': return 16; break;
            case 'r': return 17; break;
            case 's': return 18; break;
            case 't': return 19; break;
            case 'u': return 20; break;
            case 'v': return 21; break;
            case 'w': return 22; break;
            case 'x': return 23; break;
            case 'y': return 24; break;
            case 'z': return 25; break;
    }
    return 0;
}

int number_needed(string a, string b) {
   int count_a[26] = {0}, count_b[26] = {0};
    int del=0;
    for(int i=0; i<a.length(); i++){
        count_a[get_index(a[i])]++;
    }
    for(int i=0; i<b.length(); i++){
        count_b[get_index(b[i])]++;
    }
    for(int i=0; i<26; i++){
        del += abs(count_a[i]-count_b[i]);
    }
    return del;
}

int main(){
    string a;
    cin >> a;
    string b;
    cin >> b;
    cout << number_needed(a, b) << endl;
    return 0;
}
